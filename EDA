library(vegan)
library(RAM)
# otu table
OTUtable <-  read.table('OTU.csv', sep = ",", header = TRUE)
dim(OTUtable)
# set index
#rownames(OTUtable) <- OTUtable$SampleID
#OTUtable <- OTUtable[,2:9114]
colnames(OTUtable)
# a lot of otus only occur less than 10 times
#sort(colSums(OTUtable)) 

# status table
statusData <- read.table("host.csv", sep=",", header = TRUE)
statusData <-  statusData[,c(1,3,5,9)]
statusData <- statusData[statusData$Quality.score == "Good", ]
statusData$'Fungal_host_status'[statusData$'Fungal_host_status' == 'native'] = 'Native'

# This is the filtered status data
colnames(statusData)
dim(statusData)

# add status lable to otutable
OTU <-merge(x=OTUtable,y=statusData,by="SampleID",all.x=TRUE)





# exotic dataframe
library(dplyr)
df_e <- filter(OTU, Fungal_host_status == "Exotic")

# exotic reads
reads_e <- sum(df_e[2:9114])
colnames(df_e)
dim(df_e)

# calculate colsums of each otu
stat_e <- data.frame(colSums(df_e[,2:9114]))
dim(stat_e)

# create a df to include each otu's count data 
otu_e <- cbind(otu = rownames(stat_e), stat_e)
rownames(otu_e) <- 1:nrow(otu_e)


# load the meta data(2020 feburary small.....)
load(file = 'VanitaFeb_uparse_2020-02-28_small_2')
colnames(bacteriaOtus)
library(tidyr)
b <- separate(bacteriaOtus, fullname, paste("name", 1:4, sep="_"), sep = ";", extra="drop")
colnames(b)[9:11]=c('phylum','class', 'order')


# merge otu_e and b to have the phylum label, phylum is the 9th column
exotic_data <-merge(x=otu_e,y=b[,c(1,9)],by="otu",all.x=TRUE)
colnames(exotic_data)[2] = "frequency_e"

# calculate total 
agg_e <- aggregate(frequency_e~phylum, exotic_data,FUN=sum)
dim(agg_e)

#################Do all the same thing to native data

# Nativer dataframe
df_n <- filter(OTU, Fungal_host_status == "Native")
# native reads
reads_n <- sum(df_n[,2:9114])


# calculate colsums of each otu
stat_n <- data.frame(colSums(df_n[,2:9114]))
dim(stat_e)
# native data is bigger than exotic


# create a df to include each otu's count data 
otu_n <- cbind(otu = rownames(stat_n), stat_n)
rownames(otu_n) <- 1:nrow(otu_n)


# merge otu_e and b to have the phylum label, phylum is the 9th column
native_data <-merge(x=otu_n,y=b[,c(1,9)],by="otu",all.x=TRUE)
colnames(native_data)[2] = "frequency_n"

# calculate total 
agg_n <- aggregate(frequency_n~phylum, native_data,FUN=sum)
dim(agg_e)

# join agg_n and agg_e

total <- merge(agg_n, agg_e, on="phylum")
total


# plot the two columns

total['per_n'] <- round(total$frequency_n/sum(total$frequency_n),2)
total['per_e'] <- round(total$frequency_e/sum(total$frequency_e),2)

d <- cbind(total[,'per_n'],total[,'per_e'])
colnames(d) <- c('native', 'exotic')
barplot(d,beside=T, xlab="Phylum", )


# Another way to plot two group in one plot
library(RColorBrewer)
colors <- colorRampPalette(brewer.pal(9, "Set1"))(14)

total <- total[total$per_n>0.02,]

par(mfrow = c(1:2))
barplot(total$frequency_e/sum(total$frequency_e),
        col=colors,
        xlab=paste("Exotic reads", reads_e),
        ylab="percentage",
        ylim = c(0, 1),
        #legend=total$phylum
)


barplot(total$frequency_n/sum(total$frequency_n),
        col=colors,
        xlab=paste("Native reads", reads_n),
        ylim = c(0, 1),
        legend=total$phylum
        )


#######################order pie chart

# merge otu_e and b to have the phylum label, phylum is the 9th column
exotic_data <-merge(x=otu_e,y=b[,c(1,11)],by="otu",all.x=TRUE)
colnames(exotic_data)[2] = "frequency_e"

# calculate total 
agg_e <- aggregate(frequency_e~order, exotic_data,FUN=sum)
dim(agg_e)

#################Do all the same thing to native data


# merge otu_e and b to have the order 
native_data <-merge(x=otu_n,y=b[,c(1,11)],by="otu",all.x=TRUE)
colnames(native_data)[2] = "frequency_n"

# calculate total 
agg_n <- aggregate(frequency_n~order, native_data,FUN=sum)
dim(agg_n)

# join agg_n and agg_e

total <- merge(agg_n, agg_e, on="order")
total


# plot the two columns

total['per_n'] <- round(total$frequency_n/sum(total$frequency_n),2)
total['per_e'] <- round(total$frequency_e/sum(total$frequency_e),2)

d <- cbind(total[,'per_n'],total[,'per_e'])
colnames(d) <- c('native', 'exotic')
barplot(d,beside=T, xlab="order", )


# Another way to plot two group in one plot
library(RColorBrewer)
colors <- colorRampPalette(brewer.pal(9, "Set1"))(14)

total <- total[total$per_n>0.01,]

par(mfrow = c(1:2))
lbls <- total$order
slices <- total$frequency_n
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=rainbow(length(lbls)),
    main="Bacterial order in native group")

slices <- total$frequency_e
pct <- round(slices/sum(slices)*100)
lbls <- total$order
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=rainbow(length(lbls)),
    main="Bacterial order in exotic group")
